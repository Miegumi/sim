* git_wiki                                                                      :toc:
  - [[#基本命令][基本命令]]

** 基本命令
*** 利用 git 上传本地文件、文件夹到 GitHub

- 1.输入自己的用户名和邮箱（为注册 GITHUB 账号时的用户名和邮箱）

#+begin_src git
$ git config --global user.name "luyajun01@gmail.com"
$ git config --global user.email "luyajun01@gmail.com"
#+end_src

- 2.设置 SSH key
#+begin_src git
$ cd ~/.ssh
$ ls
#+end_src
如果没有密钥，则执行以下命令来生成密钥：

#+begin_src git
$ ssh-keygen -t rsa -C "luyajun01@gmail.com"
#+end_src
生成过程中按 3 次回车键就好（默认路径，默认没有密码登录），生成成功后，去对应默认路径里用记事本打开 id_rsa.pub，得到 ssh key 公钥。

- 3. clone 仓库

#+begin_src git
cd ~ //本地目录
git clone https://github.com/Miegumi/sim.git //clone
#+end_src

- 4.建立tonylu分支

建立 branch 的目的是团队中个人完成的代码上传需要建立自己的个人分支。

#+begin_src git
git checkout -b tonylu //建立tonylu分支
#+end_src

其他相关操作命令：

#+begin_src git
git checkout master //switch back to master
git branch -d feature_x //delete the branch again
#+end_src

- 5.上传文件到对应分支

#+begin_src git
git add .
git commit -m "add your files" //添加注释
git push origin tonylu //上传到tonylu分支
#+end_src

- 6.完整的操作实例

#+begin_src git
cd ~ //本地目录
git clone https://github.com/Miegumi/sim.git //clone 文件到本地目录
git branch -r //展示当前分支
git checkout -b tonylu //建立tonylu分支
git add .
git commit -m "add your files" //添加注释
git push origin tonylu //上传到tonylu分支
#+end_src

- 7.对比两个分支差异

1. 显示出branch1和branch2中差异的部分

#+begin_src git
git diff branch1 branch2 --stat
#+end_src

2. 显示指定文件的详细差异

#+begin_src git
git diff branch1 branch2 //具体文件路径
#+end_src

3. 显示出所有有差异的文件的详细差异

#+begin_src git
git diff --color branch1 branch2
#+end_src

4. 查看branch1分支有，而branch2中没有的log

#+begin_src git
git log branch1 ^branch2
#+end_src

5. 查看branch2中比branch1中多提交了哪些内容

#+begin_src git
git log branch1..branch2
#+end_src

注意，列出来的是两个点后边（此处即dev）多提交的内容。

6. 不知道谁提交的多谁提交的少，单纯想知道有什么不一样

#+begin_src git
git log branch1...branch2
#+end_src

7. 在上述情况下，在显示出每个提交是在哪个分支上

#+begin_src git
git log -lefg-right branch1...branch2
#+end_src

注意 commit 后面的箭头，根据我们在 –left-right branch1…branch2 的顺序，左箭头 < 表示是 branch1 的，右箭头 > 表示是branch2的。


- 8.删除本地和远程分支

什么时候需要删除分支?

一个 Git 仓库常常有不同的分支，开发者可以在各个分支处理不同的特性，或者在不影响主代码库的情况下修复 bug。

仓库常常有一个 master 分支，表示主代码库。开发人员创建其他分支，处理不同的特性。

开发人员完成处理一个特性之后，常常会删除相应的分支。

如果你还在一个分支上，那么 Git 是不允许你删除这个分支的。所以，请记得退出分支：git checkout master。

当一个分支被推送并合并到远程分支后，-d 才会本地删除该分支。如果一个分支还没有被推送或者合并，那么可以使用-D强制删除它。

这就是本地删除分支的方法。

远程删除分支
使用这个命令可以远程删除分支：git push <remote> --delete <branch>。

总结下，删除分支可以使用以下命令:

#+begin_src git
git checkout master
git branch -d tonylu //删除本地tonylu分支
git branch -D tonylu //上面代码跑不同，可以尝试这个代码，强制删除本地tonylu分支
git push origin --delete tonylu //删除远程tonylu分支
#+end_src

如果你看不懂上面代码意思，可以参阅这个链接https://chinese.freecodecamp.org/news/how-to-delete-a-git-branch-both-locally-and-remotely/
