library(glmnet)
library(devtools)
library(screening)
library(doParallel)
registerDoParallel(cores=4)
n = 200
p = 10000
s=5
x = matrix(NA, nrow=n,ncol=p)
z = matrix(rnorm(n*p), nrow = n,ncol = p)
w = matrix(rnorm(n*p), nrow = n,ncol = p)
sim6 = function(n,p){
  for(i in 1:5){
    x[,i]=(z[,i]+x[,i])/sqrt(2)
    x[,i+s]=x[,i]+rnorm(n,0,sqrt(0.01))
    x[,i+2*s]=x[,i]+rnorm(n,0,sqrt(0.01))
  }
  for(i in 16:p){
    for(j in 1:5){
      x[,i]=(z[,i]+sum(w[,j]))/2
    }
  }
  beta = c(rep(5,5), rep(0, p-5))
    r.square<-0.5
    sigma.square<-var(x%*%beta)/r.square
    y <-X%*%beta+rnorm(n,0,sqrt(sigma.square))   #拟合回归方程
    output= screening(X, y, method = 'holp', num.select = n, ebic = TRUE)$screen
    lag<-sum(c(1,2,3,4,5) %in% output)==5
    return(lag)
  }
  result = foreach(i=1:100, .combine = "rbind") %do% sim6(n,p) ##rerun 100 times
  
  sum(result)/100
